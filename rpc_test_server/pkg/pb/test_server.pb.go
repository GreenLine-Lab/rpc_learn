// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: test_server.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RplTestServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RplTestServer) Reset() {
	*x = RplTestServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RplTestServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RplTestServer) ProtoMessage() {}

func (x *RplTestServer) ProtoReflect() protoreflect.Message {
	mi := &file_test_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RplTestServer.ProtoReflect.Descriptor instead.
func (*RplTestServer) Descriptor() ([]byte, []int) {
	return file_test_server_proto_rawDescGZIP(), []int{0}
}

type ReqTestSeyHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *ReqTestSeyHello) Reset() {
	*x = ReqTestSeyHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTestSeyHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTestSeyHello) ProtoMessage() {}

func (x *ReqTestSeyHello) ProtoReflect() protoreflect.Message {
	mi := &file_test_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTestSeyHello.ProtoReflect.Descriptor instead.
func (*ReqTestSeyHello) Descriptor() ([]byte, []int) {
	return file_test_server_proto_rawDescGZIP(), []int{1}
}

func (x *ReqTestSeyHello) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RplTestSeyHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *RplTestSeyHello) Reset() {
	*x = RplTestSeyHello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RplTestSeyHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RplTestSeyHello) ProtoMessage() {}

func (x *RplTestSeyHello) ProtoReflect() protoreflect.Message {
	mi := &file_test_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RplTestSeyHello.ProtoReflect.Descriptor instead.
func (*RplTestSeyHello) Descriptor() ([]byte, []int) {
	return file_test_server_proto_rawDescGZIP(), []int{2}
}

func (x *RplTestSeyHello) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqTestDbUserCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NickName string `protobuf:"bytes,1,opt,name=NickName,proto3" json:"NickName,omitempty"`
	Login    string `protobuf:"bytes,2,opt,name=Login,proto3" json:"Login,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *ReqTestDbUserCreate) Reset() {
	*x = ReqTestDbUserCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqTestDbUserCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqTestDbUserCreate) ProtoMessage() {}

func (x *ReqTestDbUserCreate) ProtoReflect() protoreflect.Message {
	mi := &file_test_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqTestDbUserCreate.ProtoReflect.Descriptor instead.
func (*ReqTestDbUserCreate) Descriptor() ([]byte, []int) {
	return file_test_server_proto_rawDescGZIP(), []int{3}
}

func (x *ReqTestDbUserCreate) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ReqTestDbUserCreate) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *ReqTestDbUserCreate) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_test_server_proto protoreflect.FileDescriptor

var file_test_server_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x70,
	0x6c, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x0f, 0x52,
	0x65, 0x71, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x52, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x79,
	0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x63, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x54, 0x65, 0x73, 0x74, 0x44, 0x62, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x32, 0x92, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x79, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x1a, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x70, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x79, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x12, 0x44, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x44, 0x62, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x71, 0x54, 0x65, 0x73, 0x74, 0x44, 0x62, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x70, 0x6c, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x19, 0x5a, 0x17, 0x2e, 0x2f, 0x2e,
	0x2e, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_server_proto_rawDescOnce sync.Once
	file_test_server_proto_rawDescData = file_test_server_proto_rawDesc
)

func file_test_server_proto_rawDescGZIP() []byte {
	file_test_server_proto_rawDescOnce.Do(func() {
		file_test_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_server_proto_rawDescData)
	})
	return file_test_server_proto_rawDescData
}

var file_test_server_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_test_server_proto_goTypes = []interface{}{
	(*RplTestServer)(nil),       // 0: proto.RplTestServer
	(*ReqTestSeyHello)(nil),     // 1: proto.ReqTestSeyHello
	(*RplTestSeyHello)(nil),     // 2: proto.RplTestSeyHello
	(*ReqTestDbUserCreate)(nil), // 3: proto.ReqTestDbUserCreate
}
var file_test_server_proto_depIdxs = []int32{
	1, // 0: proto.TestServer.TestSeyHello:input_type -> proto.ReqTestSeyHello
	3, // 1: proto.TestServer.TestDbUserCreate:input_type -> proto.ReqTestDbUserCreate
	2, // 2: proto.TestServer.TestSeyHello:output_type -> proto.RplTestSeyHello
	0, // 3: proto.TestServer.TestDbUserCreate:output_type -> proto.RplTestServer
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_test_server_proto_init() }
func file_test_server_proto_init() {
	if File_test_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RplTestServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTestSeyHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RplTestSeyHello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqTestDbUserCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_test_server_proto_goTypes,
		DependencyIndexes: file_test_server_proto_depIdxs,
		MessageInfos:      file_test_server_proto_msgTypes,
	}.Build()
	File_test_server_proto = out.File
	file_test_server_proto_rawDesc = nil
	file_test_server_proto_goTypes = nil
	file_test_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TestServerClient is the client API for TestServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServerClient interface {
	TestSeyHello(ctx context.Context, in *ReqTestSeyHello, opts ...grpc.CallOption) (*RplTestSeyHello, error)
	TestDbUserCreate(ctx context.Context, in *ReqTestDbUserCreate, opts ...grpc.CallOption) (*RplTestServer, error)
}

type testServerClient struct {
	cc grpc.ClientConnInterface
}

func NewTestServerClient(cc grpc.ClientConnInterface) TestServerClient {
	return &testServerClient{cc}
}

func (c *testServerClient) TestSeyHello(ctx context.Context, in *ReqTestSeyHello, opts ...grpc.CallOption) (*RplTestSeyHello, error) {
	out := new(RplTestSeyHello)
	err := c.cc.Invoke(ctx, "/proto.TestServer/TestSeyHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *testServerClient) TestDbUserCreate(ctx context.Context, in *ReqTestDbUserCreate, opts ...grpc.CallOption) (*RplTestServer, error) {
	out := new(RplTestServer)
	err := c.cc.Invoke(ctx, "/proto.TestServer/TestDbUserCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServerServer is the server API for TestServer service.
type TestServerServer interface {
	TestSeyHello(context.Context, *ReqTestSeyHello) (*RplTestSeyHello, error)
	TestDbUserCreate(context.Context, *ReqTestDbUserCreate) (*RplTestServer, error)
}

// UnimplementedTestServerServer can be embedded to have forward compatible implementations.
type UnimplementedTestServerServer struct {
}

func (*UnimplementedTestServerServer) TestSeyHello(context.Context, *ReqTestSeyHello) (*RplTestSeyHello, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestSeyHello not implemented")
}
func (*UnimplementedTestServerServer) TestDbUserCreate(context.Context, *ReqTestDbUserCreate) (*RplTestServer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestDbUserCreate not implemented")
}

func RegisterTestServerServer(s *grpc.Server, srv TestServerServer) {
	s.RegisterService(&_TestServer_serviceDesc, srv)
}

func _TestServer_TestSeyHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTestSeyHello)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServerServer).TestSeyHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TestServer/TestSeyHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServerServer).TestSeyHello(ctx, req.(*ReqTestSeyHello))
	}
	return interceptor(ctx, in, info, handler)
}

func _TestServer_TestDbUserCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqTestDbUserCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServerServer).TestDbUserCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TestServer/TestDbUserCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServerServer).TestDbUserCreate(ctx, req.(*ReqTestDbUserCreate))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TestServer",
	HandlerType: (*TestServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestSeyHello",
			Handler:    _TestServer_TestSeyHello_Handler,
		},
		{
			MethodName: "TestDbUserCreate",
			Handler:    _TestServer_TestDbUserCreate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test_server.proto",
}
